

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Mylemans Online</title>
  <subtitle>A minimal website for tech tips, blogs and video documentation.</subtitle>
  <updated>2023-12-27T13:31:45+01:00</updated>
  <author>
    <name>Marc Mylemans</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 Marc Mylemans </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>installing a Unifi Controller with Docker and Lets Encrypt!</title>
    <link href="http://localhost:4000/posts/InstallingUnifiDockerLetsEncrypt/" rel="alternate" type="text/html" title="installing a Unifi Controller with Docker and Lets Encrypt!" />
    <published>2023-12-27T10:00:00+01:00</published>
  
    <updated>2023-12-27T12:42:27+01:00</updated>
  
    <id>http://localhost:4000/posts/InstallingUnifiDockerLetsEncrypt/</id>
    <content src="http://localhost:4000/posts/InstallingUnifiDockerLetsEncrypt/" />
    <author>
      <name>Marc Mylemans</name>
    </author>

  
    
    <category term="Docker" />
    
    <category term="Unifi" />
    
  

  
    <summary>
      





      Docker and Docker Compose Installation and Usage Guide

Installing Docker

For Ubuntu/Linux:

1) Update your existing list of packages:

sudo apt update


2) Next, install a few prerequisite packages which let apt use packages over HTTPS:

sudo apt install apt-transport-https ca-certificates curl software-properties-common


3) Then add the GPG key for the official Docker repository to your sys...
    </summary>
  

  </entry>

  
  <entry>
    <title>Wi-Fi QR Code Generator</title>
    <link href="http://localhost:4000/posts/Python_WifiQRCodeGenerator/" rel="alternate" type="text/html" title="Wi-Fi QR Code Generator" />
    <published>2023-12-04T00:00:00+01:00</published>
  
    <updated>2023-12-27T13:07:35+01:00</updated>
  
    <id>http://localhost:4000/posts/Python_WifiQRCodeGenerator/</id>
    <content src="http://localhost:4000/posts/Python_WifiQRCodeGenerator/" />
    <author>
      <name>Marc Mylemans</name>
    </author>

  
    
    <category term="Python" />
    
    <category term="Script" />
    
  

  
    <summary>
      





      Wi-Fi QR Code Generator

Overview

This script generates a QR code for Wi-Fi credentials, including SSID and password, making it easy to share Wi-Fi access information. The generated QR code can be scanned by a mobile device to quickly connect to the Wi-Fi network.

Source:

Requirements


  Python
  qrcode library


Usage


  
    Run the Script:

    Execute the script by running the followin...
    </summary>
  

  </entry>

  
  <entry>
    <title>URL QR Code Generator</title>
    <link href="http://localhost:4000/posts/Python_URLQRCodeGenerator/" rel="alternate" type="text/html" title="URL QR Code Generator" />
    <published>2023-12-04T00:00:00+01:00</published>
  
    <updated>2023-12-04T00:00:00+01:00</updated>
  
    <id>http://localhost:4000/posts/Python_URLQRCodeGenerator/</id>
    <content src="http://localhost:4000/posts/Python_URLQRCodeGenerator/" />
    <author>
      <name>Marc Mylemans</name>
    </author>

  
    
    <category term="Python" />
    
    <category term="Script" />
    
  

  
    <summary>
      





      QR Code Generator Script

This script allows you to generate QR codes from either a single URL or a CSV file containing multiple URLs.

Source:

Usage

Run the script and follow the prompts to provide input and output information:

python script_name.py


Options

Single URL:

Provide a single URL to generate a QR code.

CSV File:

Provide the location of a CSV file containing URLs.

Output Dir...
    </summary>
  

  </entry>

  
  <entry>
    <title>Converting Python Scripts to Executables</title>
    <link href="http://localhost:4000/posts/PythonToExecutable/" rel="alternate" type="text/html" title="Converting Python Scripts to Executables" />
    <published>2023-12-04T00:00:00+01:00</published>
  
    <updated>2023-12-04T09:53:10+01:00</updated>
  
    <id>http://localhost:4000/posts/PythonToExecutable/</id>
    <content src="http://localhost:4000/posts/PythonToExecutable/" />
    <author>
      <name>Marc Mylemans</name>
    </author>

  
    
    <category term="Python" />
    
    <category term="Script" />
    
  

  
    <summary>
      





      Introduction

Python is a powerful and versatile programming language, widely used for scripting and automation. However, when you want to share your Python scripts with others who may not have Python installed, converting them into executable files becomes crucial. In this guide, we’ll explore various tools and techniques to turn your Python scripts into standalone executables for different op...
    </summary>
  

  </entry>

  
  <entry>
    <title>Drivemapping with Registery key's</title>
    <link href="http://localhost:4000/posts/DrivemapRegistery/" rel="alternate" type="text/html" title="Drivemapping with Registery key&amp;apos;s" />
    <published>2023-11-28T00:00:00+01:00</published>
  
    <updated>2023-11-28T15:00:57+01:00</updated>
  
    <id>http://localhost:4000/posts/DrivemapRegistery/</id>
    <content src="http://localhost:4000/posts/DrivemapRegistery/" />
    <author>
      <name>Marc Mylemans</name>
    </author>

  
    
    <category term="windows" />
    
    <category term="registery" />
    
  

  
    <summary>
      





      Configuring Drivemapping with Registeryg Keys!

Save the following as Drivemap.reg, make sure you replace HKEY_CURRENT_USER\Network\Z with the Driveletter you want to use, for example Z. take note that these settings are for the Current User that is logged on to the system.

Windows Registry Editor Version 5.00

[HKEY_CURRENT_USER\Network\Z]
"ConnectFlags"=dword:00000000
"ConnectionType"=dword:...
    </summary>
  

  </entry>

</feed>


